{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":"AAAA,MAAM,MAAM,GAAG,CAAC,EAAC,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAA;AAC3D,MAAM,MAAM,GAAG,GAAG,CAAA;AAClB,MAAM,KAAK,GAAG,GAAG,CAAA;AAEjB,MAAM,GAAG,GACT;;;;;;;;;;;;;;;;;;;;;;;;;;oBA0BoB,CAAC;AASrB,MAAM,IAAI,GACR,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAC,EAAE,EAAE,CAAC,CAAC,EAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,SAAS,EAAiB,CAAA,CAAC;KAChH,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AAE7D,MAAM,MAAM,GAAG,EAAE,CAAC,SAAS,EAAU;KAChC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;KAC1C,OAAO,CAAC,GAAG,CAAC,CAAA;AAEjB,MAAM,MAAM,GAAG,EAAE,CAAC,WAAW,EAAE;KAC1B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;KAClD,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;AAEhD,MAAM,UAAU,GAAG,UAAU,CAAC,EAAE,CAAC,UAAU,KAAK,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAA;AACvF,+CAA+C;AAC/C,sCAAsC;AACtC,0CAA0C;AAE1C,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;KACvB,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;KACpB,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAE5B,QAAQ,CAAC,IAAI,CAAC,CAAC;AAEf,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;KACf,IAAI,CAAC,WAAW,EAAE,gBAAgB,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;KAC5D,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAA;AAEhC,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;KACf,IAAI,CAAC,WAAW,EAAE,aAAa,MAAM,CAAC,IAAI,MAAM,CAAC;KACjD,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;AAG3D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;KACZ,IAAI,CAAC,KAAK,CAAC,CAAC;AAEf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;KACZ,IAAI,CAAC,KAAK,CAAC,CAAC;AAEf,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAA;AAErC,SAAS,QAAQ,CAAC,IAAgB;IAChC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;IAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;aACb,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;aACtC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aACpB,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;aAC9B,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;aAC/C,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;KACxC;AACH,CAAC;AAED,SAAS,cAAc;IACrB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,WAAW,CAAC,CAAC,CAAA;AAC1D,CAAC;AAED,SAAS,UAAU;IACjB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,OAAO,CAAC,CAAC,CAAA;AACtD,CAAC;AAED,SAAS,OAAO;IACd,QAAQ,CAAC,IAAI,CAAC,CAAA;AAChB,CAAC","sourcesContent":["const margin = ({top: 30, right: 30, bottom: 30, left: 30})\nconst height = 500\nconst width = 800\n\nconst csv = \n`letter,frequency,letterType\nA,0.08167,vowel\nB,0.01492,consonant\nC,0.02782,consonant\nD,0.04253,consonant\nE,0.12702,vowel\nF,0.02288,consonant\nG,0.02015,consonant\nH,0.06094,consonant\nI,0.06966,vowel\nJ,0.00153,consonant\nK,0.00772,consonant\nL,0.04025,consonant\nM,0.02406,consonant\nN,0.06749,consonant\nO,0.07507,vowel\nP,0.01929,consonant\nQ,0.00095,consonant\nR,0.05987,consonant\nS,0.06327,consonant\nT,0.09056,consonant\nU,0.02758,vowel\nV,0.00978,consonant\nW,0.0236,consonant\nX,0.0015,consonant\nY,0.01974,consonant\nZ,0.00074,consonant`;\n\ninterface LetterDatum {\n  letter: string;\n  letterType: 'vowel' | 'consonant';\n  frequency: number;\n}\ntype LetterData = LetterDatum[];\n\nconst data = \n  d3.csvParse(csv, ({letter, frequency, letterType}) => ({letter, letterType, frequency: +frequency} as LetterDatum))\n    .sort((a, b) => d3.descending(a.frequency, b.frequency));\n\nconst xScale = d3.scaleBand<number>()\n    .domain(d3.range(data.length))\n    .range([margin.left, width - margin.right])\n    .padding(0.1)\n\nconst yScale = d3.scaleLinear()\n    .domain([0, d3.max(data, d => d.frequency)]).nice()\n    .range([height - margin.bottom, margin.top])\n\nconst colorScale = letterType => letterType === 'consonant' ? 'steelblue' : 'darkkhaki'\n// const colorScale = d3.scaleOrdinal<string>()\n//     .domain(['consonant', 'vowel'])\n//     .range(['steelblue', 'darkkhaki']);\n\nconst svg = d3.create(\"svg\")\n    .attr('width', width)\n    .attr('height', height);\n\nshowData(data);\n\nconst xAxis = g => g\n    .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n    .call(d3.axisBottom(xScale))\n\nconst yAxis = g => g\n    .attr(\"transform\", `translate(${margin.left}, 0)`)\n    .call(d3.axisLeft(yScale).tickFormat(d3.format('.0%')))\n\n\nsvg.append(\"g\")\n  .call(xAxis);\n\nsvg.append(\"g\")\n  .call(yAxis);\n\ndocument.body.appendChild(svg.node())\n\nfunction showData(data: LetterData) {\n  svg.selectAll('rect').remove();\n  for (let i = 0; i < data.length; i++) {\n    const d = data[i];\n    svg.append(\"rect\")\n        .attr(\"fill\", colorScale(d.letterType))\n        .attr(\"x\", xScale(i))\n        .attr(\"y\", yScale(d.frequency))\n        .attr(\"height\", yScale(0) - yScale(d.frequency))\n        .attr(\"width\", xScale.bandwidth());\n  }\n}\n\nfunction showConsonants() {\n  showData(data.filter(d => d.letterType === 'consonant'))\n}\n\nfunction showVowels() {\n  showData(data.filter(d => d.letterType === 'vowel'))\n}\n\nfunction showAll() {\n  showData(data)\n}\n\nexport {};\n"]}